======================================
Test for ``7-base_geometry`` module
======================================
This module contains a class that comtains a public methd
``integer_validator`` that validaes a value

Usage:
========
First improt the module from the parent directory

	>>> import sys
	>>> sys.path.append("..") #add parent directory to path
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()

Check if the area function works properly

	>>> bg.area()
	Traceback (most recent call last):
		...
	Exception: area() is not implemented

Test the ``integer_validator`` function

	>>> bg.integer_validator("square")
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'
	>>> bg.integer_validator()
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
	>>>

	>>> bg.integer_validator("cone", "45")
	Traceback (most recent call last):
		...
	TypeError: cone must be an integer

	>>> bg.integer_validator("Rectangle", 0)
	Traceback (most recent call last):
		...
	ValueError: Rectangle must be greater than 0

	>>> bg.integer_validator("name", -5)
	Traceback (most recent call last):
		...
	ValueError: name must be greater than 0

	>>> bg.integer_validator("test", 34)
	>>> bg.integer_validator("hello", 12)
	>>>
